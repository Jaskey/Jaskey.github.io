<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 单例 | 薛定谔的风口猪]]></title>
  <link href="http://Jaskey.github.io/blog/categories/dan-li/atom.xml" rel="self"/>
  <link href="http://Jaskey.github.io/"/>
  <updated>2016-01-16T17:32:20+08:00</updated>
  <id>http://Jaskey.github.io/</id>
  <author>
    <name><![CDATA[Jaskey Lam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[什么时候应该使用“静态类”而不使用单例？]]></title>
    <link href="http://Jaskey.github.io/blog/2014/09/24/when-to-use-static-class/"/>
    <updated>2014-09-24T20:26:02+08:00</updated>
    <id>http://Jaskey.github.io/blog/2014/09/24/when-to-use-static-class</id>
    <content type="html"><![CDATA[<p>经常我们都会使用单例，而有时候我们又会贪图方便而使用一个类然后全部都使用静态方法。那么，到底什么时候我们才应该使用这种都是静态方法的类呢(注：java没有静态类)？</p>

<ol>
<li>所有方法都是一些工具类的方法，如<code>Math</code>类</li>
<li>不希望被gc回收又不想自己去处理实例。</li>
<li>很确定这个类将来也不会是有状态的（stateful）而且你确定你不需要多个实例。</li>
</ol>


<p>注：</p>

<p>如果我们使用单例模式的话，将来假如我们需要多个实例，将非常轻松的改变，但是使用static方法的类就不行。而且使用单例的话，将很好地利用继承、多态等方法。</p>

<p>stackoverflow相关讨论：</p>

<ul>
<li><a href="http://stackoverflow.com/questions/839383/advantage-of-static-class-over-use-of-singleton/">&ldquo;Advantage of Static class over use of Singleton&rdquo;</a></li>
<li><a href="http://stackoverflow.com/questions/3714971/difference-between-singleton-class-and-static-class">&ldquo;Difference between singleton class and static class?&rdquo;</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
